{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44744\\\\netlify\\\\calendarproject\\\\src\\\\pages\\\\corporate-membership.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { H1Title } from \"../components/styles\";\nimport { ImageBox } from \"../components/image-box\";\nimport getData from \"../helpers/get-data\";\nimport { Flex } from \"reflexbox\";\nimport { Loading } from \"../components/loading\";\nimport { useEffectOnce } from \"../hooks/use-effect-once\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CorporateMembership = () => {\n  _s();\n\n  const [corporateMembers, setCorporateMembers] = useState(null); // Fetch areas\n\n  useEffectOnce(() => {\n    getData(null, 368, setCorporateMembers).catch(console.error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !corporateMembers ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(H1Title, {\n        children: corporateMembers && corporateMembers.acf && corporateMembers.acf.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), corporateMembers && corporateMembers.acf && /*#__PURE__*/_jsxDEV(Flex, {\n        flexWrap: \"wrap\",\n        children: corporateMembers.acf.members.map((_ref, i) => {\n          let {\n            acf: {\n              name,\n              link,\n              associates,\n              logo\n            }\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(ImageBox, {\n            title: name,\n            link: link,\n            textList: associates && associates.map(_ref2 => {\n              let {\n                text\n              } = _ref2;\n              return text;\n            }),\n            image: logo.url\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(CorporateMembership, \"22pF9lVTutCBWqQkchInAmL6sSk=\", false, function () {\n  return [useEffectOnce];\n});\n\n_c = CorporateMembership;\nexport default CorporateMembership;\n\nvar _c;\n\n$RefreshReg$(_c, \"CorporateMembership\");","map":{"version":3,"names":["React","useState","H1Title","ImageBox","getData","Flex","Loading","useEffectOnce","CorporateMembership","corporateMembers","setCorporateMembers","catch","console","error","acf","title","members","map","i","name","link","associates","logo","text","url"],"sources":["C:/Users/44744/netlify/calendarproject/src/pages/corporate-membership.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { H1Title } from \"../components/styles\";\r\nimport { ImageBox } from \"../components/image-box\";\r\nimport getData from \"../helpers/get-data\";\r\nimport { Flex } from \"reflexbox\";\r\nimport { Loading } from \"../components/loading\";\r\nimport { useEffectOnce } from \"../hooks/use-effect-once\";\r\n\r\nconst CorporateMembership = () => {\r\n\r\n  const [corporateMembers, setCorporateMembers] = useState(null)\r\n\r\n  // Fetch areas\r\n  useEffectOnce(() => {\r\n    getData(null, 368, setCorporateMembers).catch(console.error)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {!corporateMembers ?\r\n        <Loading/>\r\n      :\r\n      <>\r\n      <H1Title>\r\n        {(corporateMembers && corporateMembers.acf) && corporateMembers.acf.title}\r\n      </H1Title>\r\n      {(corporateMembers && corporateMembers.acf) && \r\n        <Flex flexWrap=\"wrap\">\r\n          {corporateMembers.acf.members.map(({acf: {name, link, associates, logo}}, i) => \r\n            <ImageBox key={i}\r\n              title={name}\r\n              link={link}\r\n              textList={associates && associates.map(({text}) => text)}\r\n              image={logo.url}\r\n            />\r\n          )}\r\n        </Flex>\r\n      }\r\n      </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CorporateMembership;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;EAAA;;EAEhC,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,IAAD,CAAxD,CAFgC,CAIhC;;EACAM,aAAa,CAAC,MAAM;IAClBH,OAAO,CAAC,IAAD,EAAO,GAAP,EAAYM,mBAAZ,CAAP,CAAwCC,KAAxC,CAA8CC,OAAO,CAACC,KAAtD;EACD,CAFY,EAEV,EAFU,CAAb;EAIA,oBACE;IAAA,UACG,CAACJ,gBAAD,gBACC,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADD,gBAGD;MAAA,wBACA,QAAC,OAAD;QAAA,UACIA,gBAAgB,IAAIA,gBAAgB,CAACK,GAAtC,IAA8CL,gBAAgB,CAACK,GAAjB,CAAqBC;MADtE;QAAA;QAAA;QAAA;MAAA,QADA,EAIEN,gBAAgB,IAAIA,gBAAgB,CAACK,GAAtC,iBACC,QAAC,IAAD;QAAM,QAAQ,EAAC,MAAf;QAAA,UACGL,gBAAgB,CAACK,GAAjB,CAAqBE,OAArB,CAA6BC,GAA7B,CAAiC,OAAwCC,CAAxC;UAAA,IAAC;YAACJ,GAAG,EAAE;cAACK,IAAD;cAAOC,IAAP;cAAaC,UAAb;cAAyBC;YAAzB;UAAN,CAAD;UAAA,oBAChC,QAAC,QAAD;YACE,KAAK,EAAEH,IADT;YAEE,IAAI,EAAEC,IAFR;YAGE,QAAQ,EAAEC,UAAU,IAAIA,UAAU,CAACJ,GAAX,CAAe;cAAA,IAAC;gBAACM;cAAD,CAAD;cAAA,OAAYA,IAAZ;YAAA,CAAf,CAH1B;YAIE,KAAK,EAAED,IAAI,CAACE;UAJd,GAAeN,CAAf;YAAA;YAAA;YAAA;UAAA,QADgC;QAAA,CAAjC;MADH;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;EAJF,iBADF;AAyBD,CAlCD;;GAAMV,mB;UAKJD,a;;;KALIC,mB;AAoCN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}