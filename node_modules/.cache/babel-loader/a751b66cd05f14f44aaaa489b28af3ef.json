{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nexport const useEffectOnce = effect => {\n  _s();\n\n  const destroyFunc = useRef();\n  const effectCalled = useRef(false);\n  const renderAfterCalled = useRef(false);\n  const [val, setVal] = useState(0);\n\n  if (effectCalled.current) {\n    renderAfterCalled.current = true;\n  }\n\n  useEffect(() => {\n    // only execute the effect first time around\n    if (!effectCalled.current) {\n      destroyFunc.current = effect();\n      effectCalled.current = true;\n    } // this forces one render after the effect is run\n\n\n    setVal(val => val + 1);\n    return () => {\n      // if the comp didn't render since the useEffect was called,\n      // we know it's the dummy React cycle\n      if (!renderAfterCalled.current) {\n        return;\n      }\n\n      if (destroyFunc.current) {\n        destroyFunc.current();\n      }\n    };\n  }, []);\n};\n\n_s(useEffectOnce, \"HYhMZy6Xz6sFfDRJNxQPOEPefdA=\");","map":{"version":3,"names":["useState","useEffect","useRef","useEffectOnce","effect","destroyFunc","effectCalled","renderAfterCalled","val","setVal","current"],"sources":["C:/Users/44744/netlify/calendarproject/src/hooks/use-effect-once.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\n\r\nexport const useEffectOnce = ( effect )=> {\r\n\r\n  const destroyFunc = useRef();\r\n  const effectCalled = useRef(false);\r\n  const renderAfterCalled = useRef(false);\r\n  const [val, setVal] = useState(0);\r\n\r\n  if (effectCalled.current) {\r\n      renderAfterCalled.current = true;\r\n  }\r\n\r\n  useEffect( ()=> {\r\n\r\n      // only execute the effect first time around\r\n      if (!effectCalled.current) { \r\n        destroyFunc.current = effect();\r\n        effectCalled.current = true;\r\n      }\r\n\r\n      // this forces one render after the effect is run\r\n      setVal(val => val + 1);\r\n\r\n      return ()=> {\r\n        // if the comp didn't render since the useEffect was called,\r\n        // we know it's the dummy React cycle\r\n        if (!renderAfterCalled.current) { return; }\r\n        if (destroyFunc.current) { destroyFunc.current(); }\r\n      };\r\n  }, []);\r\n};"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,OAAO,MAAMC,aAAa,GAAKC,MAAF,IAAa;EAAA;;EAExC,MAAMC,WAAW,GAAGH,MAAM,EAA1B;EACA,MAAMI,YAAY,GAAGJ,MAAM,CAAC,KAAD,CAA3B;EACA,MAAMK,iBAAiB,GAAGL,MAAM,CAAC,KAAD,CAAhC;EACA,MAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,CAAD,CAA9B;;EAEA,IAAIM,YAAY,CAACI,OAAjB,EAA0B;IACtBH,iBAAiB,CAACG,OAAlB,GAA4B,IAA5B;EACH;;EAEDT,SAAS,CAAE,MAAK;IAEZ;IACA,IAAI,CAACK,YAAY,CAACI,OAAlB,EAA2B;MACzBL,WAAW,CAACK,OAAZ,GAAsBN,MAAM,EAA5B;MACAE,YAAY,CAACI,OAAb,GAAuB,IAAvB;IACD,CANW,CAQZ;;;IACAD,MAAM,CAACD,GAAG,IAAIA,GAAG,GAAG,CAAd,CAAN;IAEA,OAAO,MAAK;MACV;MACA;MACA,IAAI,CAACD,iBAAiB,CAACG,OAAvB,EAAgC;QAAE;MAAS;;MAC3C,IAAIL,WAAW,CAACK,OAAhB,EAAyB;QAAEL,WAAW,CAACK,OAAZ;MAAwB;IACpD,CALD;EAMH,CAjBQ,EAiBN,EAjBM,CAAT;AAkBD,CA7BM;;GAAMP,a"},"metadata":{},"sourceType":"module"}