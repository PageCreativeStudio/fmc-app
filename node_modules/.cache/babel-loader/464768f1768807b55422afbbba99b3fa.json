{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44744\\\\netlify\\\\calendarproject\\\\src\\\\pages\\\\the-court.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Profile } from \"../components/profile\";\nimport { H1Title } from \"../components/styles\";\nimport profilePlaceholder from '../assets/images/person-icon.png';\nimport { Slider } from \"../components/slider\";\nimport getData from \"../helpers/get-data\";\nimport { Box, Flex } from \"reflexbox\";\nimport { InfoCard } from \"../components/info-card\";\nimport Accordian from \"../components/accordian/accordian.component\";\nimport { Loading } from \"../components/loading\";\nimport { useEffectOnce } from \"../hooks/use-effect-once\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OfficersAndTheCourt = () => {\n  _s();\n\n  const [officersData, setOfficersData] = useState(null); // Fetch areas\n\n  useEffectOnce(() => {\n    getData(null, 364, setOfficersData).catch(console.error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !officersData ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(H1Title, {\n        children: officersData && officersData.acf && officersData.acf.carousel_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), officersData && officersData.acf && /*#__PURE__*/_jsxDEV(Slider, {\n        label: officersData.acf.carousel_title && officersData.acf.carousel_title,\n        slides: officersData.acf.carousel && officersData.acf.carousel.map(_ref => {\n          let {\n            acf: {\n              name,\n              phone_1,\n              phone_2,\n              email,\n              roles,\n              image,\n              description\n            }\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Profile, {\n            width: \"100%\",\n            title: name,\n            text: roles && roles[0].role,\n            image: image ? image.url : profilePlaceholder,\n            dropdownOptions: (phone_1 || phone_2 || email) && [phone_1, phone_2, email],\n            link: \"/member\",\n            moreInfo: description ? description : null\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(H1Title, {\n        children: officersData && officersData.acf && officersData.acf.members_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flexWrap: \"wrap\",\n        marginBottom: \"5rem\",\n        children: officersData && officersData.acf && officersData.acf.areas && /*#__PURE__*/_jsxDEV(Box, {\n          width: ['100%'],\n          children: officersData.acf.areas.map(_ref2 => {\n            let {\n              title,\n              infobox_text,\n              members\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(Accordian, {\n              title: title,\n              infoBox: infobox_text,\n              children: members && /*#__PURE__*/_jsxDEV(Flex, {\n                flexWrap: \"wrap\",\n                children: members.map((_ref3, i) => {\n                  let {\n                    acf: {\n                      name,\n                      phone_1,\n                      phone_2,\n                      email,\n                      roles\n                    }\n                  } = _ref3;\n                  return /*#__PURE__*/_jsxDEV(InfoCard, {\n                    primary: false,\n                    width: ['100%', '100%', '100%', 'calc(50% - 2rem)'],\n                    title: name,\n                    phone1: phone_1,\n                    phone2: phone_2,\n                    email: email,\n                    textList: roles && roles.map(role => role.role)\n                  }, name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 86\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 29\n              }, this)\n            }, title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 76\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(OfficersAndTheCourt, \"w909uoVkOi9Hy23YPpI65B3yKC4=\", false, function () {\n  return [useEffectOnce];\n});\n\n_c = OfficersAndTheCourt;\nexport default OfficersAndTheCourt;\n\nvar _c;\n\n$RefreshReg$(_c, \"OfficersAndTheCourt\");","map":{"version":3,"names":["React","useState","Profile","H1Title","profilePlaceholder","Slider","getData","Box","Flex","InfoCard","Accordian","Loading","useEffectOnce","OfficersAndTheCourt","officersData","setOfficersData","catch","console","error","acf","carousel_title","carousel","map","name","phone_1","phone_2","email","roles","image","description","role","url","members_title","areas","title","infobox_text","members","i"],"sources":["C:/Users/44744/netlify/calendarproject/src/pages/the-court.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Profile } from \"../components/profile\";\r\nimport { H1Title } from \"../components/styles\";\r\nimport profilePlaceholder from '../assets/images/person-icon.png';\r\nimport { Slider } from \"../components/slider\";\r\nimport getData from \"../helpers/get-data\";\r\nimport { Box, Flex } from \"reflexbox\";\r\nimport { InfoCard } from \"../components/info-card\";\r\nimport Accordian from \"../components/accordian/accordian.component\";\r\nimport { Loading } from \"../components/loading\";\r\nimport { useEffectOnce } from \"../hooks/use-effect-once\";\r\n\r\n\r\nconst OfficersAndTheCourt = () => {\r\n\r\n  const [officersData, setOfficersData] = useState(null)\r\n\r\n  // Fetch areas\r\n  useEffectOnce(() => {\r\n    getData(null, 364, setOfficersData).catch(console.error)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {!officersData ?\r\n       <Loading />\r\n      :\r\n      <>\r\n      <H1Title>\r\n        {(officersData && officersData.acf) && officersData.acf.carousel_title}\r\n      </H1Title>\r\n      {(officersData && officersData.acf) &&\r\n        <Slider\r\n          label= {officersData.acf.carousel_title && officersData.acf.carousel_title}\r\n          slides={officersData.acf.carousel && officersData.acf.carousel.map(({acf: {name, phone_1, phone_2, email, roles, image, description}}) => \r\n            <Profile key={name}\r\n              width=\"100%\"\r\n              title={name}\r\n              text={roles && roles[0].role}\r\n              image={image ? image.url : profilePlaceholder}\r\n              dropdownOptions={(phone_1 || phone_2 || email) && [\r\n                phone_1,\r\n                phone_2,\r\n                email\r\n              ]}\r\n              link=\"/member\"\r\n              moreInfo={description ? description : null}\r\n            />)}\r\n        />}\r\n        <H1Title>\r\n          {(officersData && officersData.acf) && officersData.acf.members_title}\r\n        </H1Title>\r\n        <Flex flexWrap=\"wrap\" marginBottom=\"5rem\">\r\n          {(officersData && officersData.acf && officersData.acf.areas) && <Box width={['100%']}> \r\n            {officersData.acf.areas.map(({title, infobox_text, members}) =>\r\n              <Accordian key={title} title={title} infoBox={infobox_text}>\r\n                {members && <Flex flexWrap=\"wrap\">\r\n                  {members.map(({acf: {name, phone_1, phone_2, email, roles}}, i) => <InfoCard key={name}\r\n                    primary={false}\r\n                    width={['100%', '100%', '100%', 'calc(50% - 2rem)']}\r\n                    title={name}\r\n                    phone1={phone_1}\r\n                    phone2={phone_2}\r\n                    email={email}\r\n                    textList={roles && roles.map(role => role.role)}\r\n                  />)}\r\n                </Flex>}\r\n              </Accordian>)}\r\n          </Box>}\r\n        </Flex>\r\n      </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OfficersAndTheCourt;"],"mappings":"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"},"metadata":{},"sourceType":"module"}