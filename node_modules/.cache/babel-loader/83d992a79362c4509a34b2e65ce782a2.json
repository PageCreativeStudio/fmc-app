{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44744\\\\netlify\\\\calendarproject\\\\src\\\\pages\\\\committees.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Box } from \"reflexbox\";\nimport Accordian from \"../components/accordian/accordian.component\";\nimport { InfoCard } from \"../components/info-card\";\nimport { InfoPopup } from \"../components/info-popup\";\nimport { Loading } from \"../components/loading\";\nimport { H1Title } from \"../components/styles\";\nimport getData from \"../helpers/get-data\";\nimport { useEffectOnce } from \"../hooks/use-effect-once\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Committees = () => {\n  _s();\n\n  const [committees, setCommittees] = useState(null); // Fetch page data\n\n  useEffectOnce(() => {\n    getData(null, 359, setCommittees).catch(console.error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!committees ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : committees && committees.acf && /*#__PURE__*/_jsxDEV(H1Title, {\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [\"COMMITTEES\", /*#__PURE__*/_jsxDEV(Box, {\n          marginLeft: \"1.5rem\",\n          children: /*#__PURE__*/_jsxDEV(InfoPopup, {\n            width: \"37rem\",\n            children: committees.acf.infobox_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 41\n    }, this), committees && committees.acf && committees.acf.areas && committees.acf.areas.map(_ref => {\n      let {\n        title,\n        member,\n        events\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Accordian, {\n        events: events,\n        title: title,\n        children: member && /*#__PURE__*/_jsxDEV(Flex, {\n          flexWrap: \"wrap\",\n          children: member.map((_ref2, i) => {\n            let {\n              acf: {\n                image,\n                name,\n                phone_1,\n                phone_2,\n                email,\n                roles,\n                events\n              }\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(InfoCard, {\n              primary: false,\n              width: ['100%', '100%', '100%', 'calc(50% - 2rem)'],\n              image: image ? image.url : null,\n              title: name,\n              phone1: phone_1,\n              phone2: phone_2,\n              email: email,\n              events: events,\n              textList: roles && roles.map(role => role.role)\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 92\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }, this)\n      }, title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 120\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Committees, \"d+2986gyuVF6BIeKMcK7lI497yI=\", false, function () {\n  return [useEffectOnce];\n});\n\n_c = Committees;\nexport default Committees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Committees\");","map":{"version":3,"names":["React","useEffect","useState","Flex","Box","Accordian","InfoCard","InfoPopup","Loading","H1Title","getData","useEffectOnce","Committees","committees","setCommittees","catch","console","error","acf","infobox_text","areas","map","title","member","events","i","image","name","phone_1","phone_2","email","roles","url","role"],"sources":["C:/Users/44744/netlify/calendarproject/src/pages/committees.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Flex, Box } from \"reflexbox\";\r\nimport Accordian from \"../components/accordian/accordian.component\";\r\nimport { InfoCard } from \"../components/info-card\";\r\nimport { InfoPopup } from \"../components/info-popup\";\r\nimport { Loading } from \"../components/loading\";\r\nimport { H1Title } from \"../components/styles\";\r\nimport getData from \"../helpers/get-data\";\r\nimport { useEffectOnce } from \"../hooks/use-effect-once\";\r\n\r\nconst Committees = () => {\r\n\r\n  const [committees, setCommittees] = useState(null)\r\n\r\n  // Fetch page data\r\n  useEffectOnce(() => {\r\n    getData(null, 359, setCommittees).catch(console.error)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {!committees ?\r\n        <Loading />\r\n      :\r\n      (committees && committees.acf) && <H1Title>\r\n        <Flex alignItems=\"center\">\r\n          COMMITTEES \r\n          <Box marginLeft=\"1.5rem\">\r\n            <InfoPopup width=\"37rem\">\r\n              {committees.acf.infobox_text}\r\n            </InfoPopup>\r\n          </Box>\r\n        </Flex>\r\n      </H1Title>}\r\n      {(committees && committees.acf && committees.acf.areas) && committees.acf.areas.map(({title, member, events}) => <Accordian events={events} key={title} title={title}>\r\n        {member && <Flex flexWrap=\"wrap\">\r\n          {member.map(({acf: {image, name, phone_1, phone_2, email, roles, events}}, i) => <InfoCard key={name}\r\n            primary={false}\r\n            width={['100%', '100%', '100%', 'calc(50% - 2rem)']}\r\n            image={image ? image.url : null}\r\n            title={name}\r\n            phone1={phone_1}\r\n            phone2={phone_2}\r\n            email={email}\r\n            events={events}\r\n            textList={roles && roles.map(role => role.role)}\r\n          />)}\r\n        </Flex>}\r\n      </Accordian>)\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Committees;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,WAA1B;AACA,OAAOC,SAAP,MAAsB,6CAAtB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAEvB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,IAAD,CAA5C,CAFuB,CAIvB;;EACAS,aAAa,CAAC,MAAM;IAClBD,OAAO,CAAC,IAAD,EAAO,GAAP,EAAYI,aAAZ,CAAP,CAAkCC,KAAlC,CAAwCC,OAAO,CAACC,KAAhD;EACD,CAFY,EAEV,EAFU,CAAb;EAIA,oBACE;IAAA,WACG,CAACJ,UAAD,gBACC,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADD,GAGAA,UAAU,IAAIA,UAAU,CAACK,GAA1B,iBAAkC,QAAC,OAAD;MAAA,uBAChC,QAAC,IAAD;QAAM,UAAU,EAAC,QAAjB;QAAA,sCAEE,QAAC,GAAD;UAAK,UAAU,EAAC,QAAhB;UAAA,uBACE,QAAC,SAAD;YAAW,KAAK,EAAC,OAAjB;YAAA,UACGL,UAAU,CAACK,GAAX,CAAeC;UADlB;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADgC;MAAA;MAAA;MAAA;IAAA,QAJpC,EAcIN,UAAU,IAAIA,UAAU,CAACK,GAAzB,IAAgCL,UAAU,CAACK,GAAX,CAAeE,KAAhD,IAA0DP,UAAU,CAACK,GAAX,CAAeE,KAAf,CAAqBC,GAArB,CAAyB;MAAA,IAAC;QAACC,KAAD;QAAQC,MAAR;QAAgBC;MAAhB,CAAD;MAAA,oBAA6B,QAAC,SAAD;QAAW,MAAM,EAAEA,MAAnB;QAAuC,KAAK,EAAEF,KAA9C;QAAA,UAC9GC,MAAM,iBAAI,QAAC,IAAD;UAAM,QAAQ,EAAC,MAAf;UAAA,UACRA,MAAM,CAACF,GAAP,CAAW,QAA+DI,CAA/D;YAAA,IAAC;cAACP,GAAG,EAAE;gBAACQ,KAAD;gBAAQC,IAAR;gBAAcC,OAAd;gBAAuBC,OAAvB;gBAAgCC,KAAhC;gBAAuCC,KAAvC;gBAA8CP;cAA9C;YAAN,CAAD;YAAA,oBAAqE,QAAC,QAAD;cAC/E,OAAO,EAAE,KADsE;cAE/E,KAAK,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,kBAAzB,CAFwE;cAG/E,KAAK,EAAEE,KAAK,GAAGA,KAAK,CAACM,GAAT,GAAe,IAHoD;cAI/E,KAAK,EAAEL,IAJwE;cAK/E,MAAM,EAAEC,OALuE;cAM/E,MAAM,EAAEC,OANuE;cAO/E,KAAK,EAAEC,KAPwE;cAQ/E,MAAM,EAAEN,MARuE;cAS/E,QAAQ,EAAEO,KAAK,IAAIA,KAAK,CAACV,GAAN,CAAUY,IAAI,IAAIA,IAAI,CAACA,IAAvB;YAT4D,GAAeN,IAAf;cAAA;cAAA;cAAA;YAAA,QAArE;UAAA,CAAX;QADQ;UAAA;UAAA;UAAA;QAAA;MADoG,GAAgCL,KAAhC;QAAA;QAAA;QAAA;MAAA,QAA7B;IAAA,CAAzB,CAd7D;EAAA,gBADF;AAiCD,CA1CD;;GAAMV,U;UAKJD,a;;;KALIC,U;AA4CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}